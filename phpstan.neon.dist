parameters:
    level: 8
    phpVersion: 80200
    paths:
        - src
        - static-analysis
        - tests
    treatPhpDocTypesAsCertain: false
    reportUnmatchedIgnoredErrors: false
    checkMissingIterableValueType: false
    checkGenericClassInNonGenericObjectType: false
    ignoreErrors:
        # https://github.com/phpstan/phpstan-strict-rules/issues/103
        -
            message: '~^Construct empty\(\) is not allowed. Use more strict comparison\.~'
            paths:
                - src/Connections/PrimaryReadReplicaConnection.php
                - src/Driver/*/Driver.php
                - src/Driver/AbstractOracleDriver/EasyConnectString.php
                - src/Platforms/*Platform.php
                - src/Schema/*SchemaManager.php

        # In some namespaces, we use array<string,mixed>, some elements of which are actually boolean
        -
            message: '~^Only booleans are allowed in .*, mixed given~'
            paths:
                - src/Platforms/*Platform.php
                - src/Schema/*SchemaManager.php

        # Some APIs use variable method calls internally
        -
            message: '~^Variable method call on .*~'
            paths:
                - src/Schema/Column.php

        # TODO: remove this once the support for PHP 7 is dropped
        -
            message: '~^Strict comparison using !== between int and false will always evaluate to true\.$~'
            paths:
                - src/Driver/OCI8/Result.php
        -
            message: '~^Unreachable statement - code above always terminates\.$~'
            paths:
                - src/Driver/OCI8/Result.php

        # https://github.com/phpstan/phpstan/issues/4679
        -
            message: '~^Cannot call method writeTemporary\(\) on OCILob\|null\.$~'
            paths:
                - src/Driver/OCI8/Statement.php

        -
            message: '~Method Doctrine\\DBAL\\Driver\\Mysqli\\Result::rowCount\(\) should return int but returns int(:?<0, max>)?\|string\.~'
            paths:
                - src/Driver/Mysqli/Result.php

        # Removing the (int) cast will make Psalm unhappy.
        -
            message: '~^Casting to int something that''s already int\.$~'
            paths:
                - src/Driver/Mysqli/Exception/ConnectionError.php
                - src/Driver/Mysqli/Exception/ConnectionFailed.php
                - src/Driver/Mysqli/Exception/InvalidCharset.php
                - src/Driver/Mysqli/Exception/StatementError.php

        # We're testing with invalid input.
        -
            message: '~^Unable to resolve the template type T in call to method static method Doctrine\\DBAL\\DriverManager::getConnection\(\)~'
            path: tests/DriverManagerTest.php
        -
            message: '~array{driver: ''invalid_driver''} given\.$~'
            path: tests/DriverManagerTest.php
        -
            message: '~array{driver: ''pdo_sqlite'', memory: true, wrapperClass: ''stdClass''} given\.$~'
            path: tests/DriverManagerTest.php
        -
            message: '~array{driverClass: ''stdClass''} given\.$~'
            path: tests/DriverManagerTest.php
        -
            message: '~^Call to static method PHPUnit\\Framework\\Assert\:\:assert(?:NotNull|Null|InstanceOf|IsFloat|IsInt)\(\) with .* will always evaluate to true\.$~'
            path: tests/Types/
        -
            message: '~^Parameter #1 \$driverOptions of method Doctrine\\DBAL\\Tests\\Functional\\Driver\\Mysqli\\ConnectionTest\:\:getConnection\(\) expects array<string, mixed>, .* given\.$~'
            path: tests/Functional/Driver/Mysqli/ConnectionTest.php

        # Fixing the issue would cause a BC break.
        # TODO: fix in 4.0.0
        -
            message: '~^Method Doctrine\\DBAL\\Driver\\Mysqli\\Connection::exec\(\) should return int but returns int\|string\.$~'
            paths:
                - src/Driver/Mysqli/Connection.php

        # DriverManagerTest::testDatabaseUrl() should be refactored as it's too dynamic.
        -
            message: '~^Offset string does not exist on array{.+}\.$~'
            paths:
                - tests/DriverManagerTest.php

        # There is no way to make this assertion in the code,
        # and the API doesn't support parametrization of returned column types.
        -
            message: '~^Method Doctrine\\DBAL\\Schema\\PostgreSQLSchemaManager::fetchTableOptionsByTable\(\) should return array<string, array<string, mixed>> but returns array<int\|string, array<string, mixed>>\.$~'
            paths:
                - src/Schema/PostgreSQLSchemaManager.php

        # We don't need to declare the return type *that* fine-grained.
        - '~^Method Doctrine\\DBAL\\Driver\\PDO\\Statement\:\:convertParamType\(\) never returns \d+ so it can be removed from the return type\.$~'

        # PgSql objects are represented as resources in PHP 7.4
        - '~ expects PgSql\\Connection(:?\|(?:string|null))?, PgSql\\Connection\|resource given\.$~'
        - '~ expects PgSql\\Result, PgSql\\Result\|resource given\.$~'

        # PHPStan does not understand the array shapes returned by pg_fetch_*() methods.
        - '~^Parameter #1 \$row of method Doctrine\\DBAL\\Driver\\PgSQL\\Result\:\:mapAssociativeRow\(\) expects array<string, string\|null>, array<int\|string, string\|null> given\.$~'
        - '~^Parameter #1 \$row of method Doctrine\\DBAL\\Driver\\PgSQL\\Result\:\:mapNumericRow\(\) expects array<int, string\|null>, array<int\|string, string\|null> given\.$~'

        # Ignore isset() checks in destructors.
        - '~^Property Doctrine\\DBAL\\Driver\\PgSQL\\Connection\:\:\$connection \(PgSql\\Connection\|resource\) in isset\(\) is not nullable\.$~'

        # On PHP 7.4, pg_fetch_all() might return false for empty result sets.
        -
            message: '~^Strict comparison using === between array<int, array> and false will always evaluate to false\.$~'
            paths:
                - src/Driver/PgSQL/Result.php
includes:
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/phpstan/phpstan-phpunit/rules.neon
    - vendor/phpstan/phpstan-strict-rules/rules.neon
